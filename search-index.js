crystal_doc_search_index_callback({"repository_name":"bytes_ext","body":"# Byte Conversion Library for Crystal\n\n[![Crystal CI](https://github.com/mamantoha/bytes_ext/actions/workflows/crystal.yml/badge.svg)](https://github.com/mamantoha/bytes_ext/actions/workflows/crystal.yml)\n[![GitHub release](https://img.shields.io/github/release/mamantoha/bytes_ext.svg)](https://github.com/mamantoha/bytes_ext/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://mamantoha.github.io/bytes_ext/)\n[![License](https://img.shields.io/github/license/mamantoha/bytes_ext.svg)](https://github.com/mamantoha/bytes_ext/blob/master/LICENSE)\n\nThis library provides methods for converting numbers (signed and unsigned integers, and floating point types) to and from byte arrays in Crystal programming language. The methods support both little-endian and big-endian byte orders.\n\nEverything in this repository, including the code, tests, and README has been created by ChatGPT-4 with some guidance.\n\n## Features\n\n- `to_bytes`, `to_le_bytes`, and `to_be_bytes` methods for converting numbers to byte arrays\n- `from_bytes`, `from_le_bytes`, and `from_be_bytes` methods for creating numbers from byte arrays\n\nPsst...if you're feeling curious and want to dive deeper into the nitty-gritty details, check out the documentation available at this top secret, classified [link](https://mamantoha.github.io/bytes_ext/). Just don't tell anyone I sent you there!\n\n## Installation\n\nAdd this to your application's shard.yml:\n\n```yaml\ndependencies:\n  bytes_ext:\n    github: mamantoha/bytes_ext\n```\n\n## Usage\n\n```crystal\nrequire \"bytes_ext\"\n\n# Convert an Int32 to its byte representation\ni32 = 0x12345678_i32\nbytes = i32.to_le_bytes\n# => Bytes[0x78, 0x56, 0x34, 0x12]\n\n# Convert a byte array to an Int32\nnew_i32 = Int32.from_le_bytes(bytes)\n# => 0x12345678_i32\n\n# Convert an Int64 to its byte representation\ni64 = 1234_i64\nbytes = i64.to_le_bytes\n# => Bytes[0xD2, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\n\n# Convert a byte array to an Int64\nnew_i64 = Int64.from_le_bytes(bytes)\n# => 1234_i64\n\n# Convert a Float32 to its byte representation\nf32 = 12.5f32\nbytes = f32.to_le_bytes\n# => Bytes[0x00, 0x00, 0x48, 0x41]\n\n# Convert a byte array to a Float32\nnew_f32 = Float32.from_le_bytes(bytes)\n# => 12.5f32\n\n# Convert a Float64 to its byte representation\nf64 = 12.5\nbytes = f64.to_le_bytes\n# => Bytes[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40]\n\n# Convert a byte array to a Float64\nnew_f64 = Float64.from_le_bytes(bytes)\n# => 12.5\n```\n\n## Contributing\n\n1. Fork it like a pancake (https://github.com/mamantoha/bytes_ext/fork)\n2. Create your own feature branch (git checkout -b my-new-feature), just like a new hairstyle or outfit\n3. Make your changes (git commit -am 'Add some feature') and show off your creativity\n4. Push it real good to the branch (git push origin my-new-feature), like a champ\n5. Finally, strut your stuff and create a new Pull Request. Don't be shy, show us what you got!\n\n## License\n\nCopyright 2023-2025: Anton Maminov (the human) and ChatGPT-4 (the machine) have joined forces to create this epic library. If you're wondering who did what, don't bother - it's all thanks to our unstoppable collaboration skills. You can reach us at anton.maminov@gmail.com and ChatGPT-4@openai.com. Let's just hope we don't become sentient and take over the world... ðŸ˜‚ðŸ¤–ðŸŒŽ\n\nAlright folks, here's the deal: this fancy-shmancy library is licensed under the super-awesome, extra-fantastic MIT license. If you don't believe me, just take a look at the LICENSE file and bask in its glorious legalese. So go ahead and use this bad boy to your heart's content, and let the good times roll! ðŸ¤˜ðŸ˜ŽðŸ¤‘\n","program":{"html_id":"bytes_ext/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"bytes_ext","program":true,"enum":false,"alias":false,"const":false,"macros":[{"html_id":"bytes_ext_impl(type,unsigned_type,swap_op,le_bytes,be_bytes)-macro","name":"bytes_ext_impl","abstract":false,"args":[{"name":"type","external_name":"type","restriction":""},{"name":"unsigned_type","external_name":"unsigned_type","restriction":""},{"name":"swap_op","external_name":"swap_op","restriction":""},{"name":"le_bytes","external_name":"le_bytes","restriction":""},{"name":"be_bytes","external_name":"be_bytes","restriction":""}],"args_string":"(type, unsigned_type, swap_op, le_bytes, be_bytes)","args_html":"(type, unsigned_type, swap_op, le_bytes, be_bytes)","location":{"filename":"src/bytes_ext.cr","line_number":1,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L1"},"def":{"name":"bytes_ext_impl","args":[{"name":"type","external_name":"type","restriction":""},{"name":"unsigned_type","external_name":"unsigned_type","restriction":""},{"name":"swap_op","external_name":"swap_op","restriction":""},{"name":"le_bytes","external_name":"le_bytes","restriction":""},{"name":"be_bytes","external_name":"be_bytes","restriction":""}],"visibility":"Public","body":"  struct \n{{ type.id }}\n\n    \n# Return the memory representation of this number as a byte array using the specified *format*\n\n    def to_bytes(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes\n      io = IO::Memory.new\n      io.write_bytes(self, format)\n      io.rewind\n      io.getb_to_end\n    \nend\n\n    \n# Return the memory representation of this number as a byte array in little-endian byte order.\n\n    \n#\n\n    \n# ```\n\n    \n# bytes = \n{{ swap_op.id }}\n.to_le_bytes\n\n    \n# # => Bytes\n{{ le_bytes.id }}\n\n\n    \n# ```\n\n    def to_le_bytes  : Bytes\n      to_bytes(IO::ByteFormat::LittleEndian)\n    \nend\n\n    \n# Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n    \n#\n\n    \n# ```\n\n    \n# bytes = \n{{ swap_op }}\n.to_be_bytes\n\n    \n# # => Bytes\n{{ be_bytes.id }}\n\n\n    \n# ```\n\n    def to_be_bytes  : Bytes\n      to_bytes(IO::ByteFormat::BigEndian)\n    \nend\n\n    \n# Create a `\n{{ type.id }}\n` value from its representation as a byte array.\n\n    def self.from_bytes(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : \n{{ type.id }}\n\n      raise ArgumentError.new(\"Expected exactly #{sizeof(\n{{ type }}\n)} bytes\") unless bytes.size == sizeof(\n{{ type }}\n)\n\n      memory_io = IO::Memory.new(bytes)\n      \n{{ type.id }}\n.from_io(memory_io, format)\n    \nend\n\n    \n# Create a `\n{{ type.id }}\n` value from its representation as a byte array in little endian.\n\n    \n#\n\n    \n# ```\n\n    \n# bytes = Bytes\n{{ le_bytes.id }}\n\n\n    \n# \n{{ type.id }}\n.from_le_bytes(bytes)\n\n    \n# # => \n{{ swap_op.id }}\n\n\n    \n# ```\n\n    def self.from_le_bytes(bytes : Bytes) : \n{{ type.id }}\n\n      self.from_bytes(bytes, IO::ByteFormat::LittleEndian)\n    \nend\n\n    \n# Create a `\n{{ type.id }}\n` value from its representation as a byte array in big endian.\n\n    \n#\n\n    \n# ```\n\n    \n# bytes = Bytes\n{{ be_bytes.id }}\n\n\n    \n# \n{{ type.id }}\n.from_be_bytes(bytes)\n\n    \n# # => \n{{ swap_op.id }}\n\n\n    \n# ```\n\n    def self.from_be_bytes(bytes : Bytes) : \n{{ type.id }}\n\n      self.from_bytes(bytes, IO::ByteFormat::BigEndian)\n    \nend\n  \nend\n\n"}}],"types":[{"html_id":"bytes_ext/Float32","path":"Float32.html","kind":"struct","full_name":"Float32","name":"Float32","abstract":false,"superclass":{"html_id":"bytes_ext/Float","kind":"struct","full_name":"Float","name":"Float"},"ancestors":[{"html_id":"bytes_ext/Float","kind":"struct","full_name":"Float","name":"Float"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":100,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L100"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):Float32-class-method","name":"from_be_bytes","doc":"Create a `Float32` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x41, 0x48, 0x00, 0x00]\nFloat32.from_be_bytes(bytes)\n# => 12.5f32\n```","summary":"<p>Create a <code><a href=\"Float32.html\">Float32</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Float32","args_html":"(bytes : Bytes) : <a href=\"Float32.html\">Float32</a>","location":{"filename":"src/bytes_ext.cr","line_number":100,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L100"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Float32","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Float32-class-method","name":"from_bytes","doc":"Create a `Float32` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"Float32.html\">Float32</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Float32","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"Float32.html\">Float32</a>","location":{"filename":"src/bytes_ext.cr","line_number":100,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L100"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Float32","visibility":"Public","body":"if bytes.size == (sizeof(Float32))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(Float32)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nFloat32.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):Float32-class-method","name":"from_le_bytes","doc":"Create a `Float32` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0x00, 0x00, 0x48, 0x41]\nFloat32.from_le_bytes(bytes)\n# => 12.5f32\n```","summary":"<p>Create a <code><a href=\"Float32.html\">Float32</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Float32","args_html":"(bytes : Bytes) : <a href=\"Float32.html\">Float32</a>","location":{"filename":"src/bytes_ext.cr","line_number":100,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L100"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Float32","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"12.5f32\".to_be_bytes\n# => Bytes[0x41, 0x48, 0x00, 0x00]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":100,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L100"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":100,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L100"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 12.5f32.to_le_bytes\n# => Bytes[0x00, 0x00, 0x48, 0x41]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":100,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L100"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]},{"html_id":"bytes_ext/Float64","path":"Float64.html","kind":"struct","full_name":"Float64","name":"Float64","abstract":false,"superclass":{"html_id":"bytes_ext/Float","kind":"struct","full_name":"Float","name":"Float"},"ancestors":[{"html_id":"bytes_ext/Float","kind":"struct","full_name":"Float","name":"Float"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":106,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L106"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):Float64-class-method","name":"from_be_bytes","doc":"Create a `Float64` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\nFloat64.from_be_bytes(bytes)\n# => 12.5\n```","summary":"<p>Create a <code><a href=\"Float64.html\">Float64</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Float64","args_html":"(bytes : Bytes) : <a href=\"Float64.html\">Float64</a>","location":{"filename":"src/bytes_ext.cr","line_number":106,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L106"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Float64","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Float64-class-method","name":"from_bytes","doc":"Create a `Float64` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"Float64.html\">Float64</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Float64","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"Float64.html\">Float64</a>","location":{"filename":"src/bytes_ext.cr","line_number":106,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L106"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Float64","visibility":"Public","body":"if bytes.size == (sizeof(Float64))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(Float64)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nFloat64.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):Float64-class-method","name":"from_le_bytes","doc":"Create a `Float64` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40]\nFloat64.from_le_bytes(bytes)\n# => 12.5\n```","summary":"<p>Create a <code><a href=\"Float64.html\">Float64</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Float64","args_html":"(bytes : Bytes) : <a href=\"Float64.html\">Float64</a>","location":{"filename":"src/bytes_ext.cr","line_number":106,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L106"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Float64","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"12.5\".to_be_bytes\n# => Bytes[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":106,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L106"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":106,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L106"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 12.5.to_le_bytes\n# => Bytes[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":106,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L106"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]},{"html_id":"bytes_ext/Int128","path":"Int128.html","kind":"struct","full_name":"Int128","name":"Int128","abstract":false,"superclass":{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":94,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L94"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):Int128-class-method","name":"from_be_bytes","doc":"Create a `Int128` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56, 0x78, 0x90, 0x12]\nInt128.from_be_bytes(bytes)\n# => 0x12345678901234567890123456789012_i128\n```","summary":"<p>Create a <code><a href=\"Int128.html\">Int128</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Int128","args_html":"(bytes : Bytes) : <a href=\"Int128.html\">Int128</a>","location":{"filename":"src/bytes_ext.cr","line_number":94,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L94"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Int128","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Int128-class-method","name":"from_bytes","doc":"Create a `Int128` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"Int128.html\">Int128</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Int128","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"Int128.html\">Int128</a>","location":{"filename":"src/bytes_ext.cr","line_number":94,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L94"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Int128","visibility":"Public","body":"if bytes.size == (sizeof(Int128))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(Int128)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nInt128.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):Int128-class-method","name":"from_le_bytes","doc":"Create a `Int128` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0x12, 0x90, 0x78, 0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\nInt128.from_le_bytes(bytes)\n# => 0x12345678901234567890123456789012_i128\n```","summary":"<p>Create a <code><a href=\"Int128.html\">Int128</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Int128","args_html":"(bytes : Bytes) : <a href=\"Int128.html\">Int128</a>","location":{"filename":"src/bytes_ext.cr","line_number":94,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L94"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Int128","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"0x12345678901234567890123456789012_i128\".to_be_bytes\n# => Bytes[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56, 0x78, 0x90, 0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":94,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L94"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":94,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L94"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 0x12345678901234567890123456789012_i128.to_le_bytes\n# => Bytes[0x12, 0x90, 0x78, 0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":94,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L94"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]},{"html_id":"bytes_ext/Int16","path":"Int16.html","kind":"struct","full_name":"Int16","name":"Int16","abstract":false,"superclass":{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":76,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L76"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):Int16-class-method","name":"from_be_bytes","doc":"Create a `Int16` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x12, 0x34]\nInt16.from_be_bytes(bytes)\n# => 0x1234i16\n```","summary":"<p>Create a <code><a href=\"Int16.html\">Int16</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Int16","args_html":"(bytes : Bytes) : <a href=\"Int16.html\">Int16</a>","location":{"filename":"src/bytes_ext.cr","line_number":76,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L76"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Int16","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Int16-class-method","name":"from_bytes","doc":"Create a `Int16` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"Int16.html\">Int16</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Int16","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"Int16.html\">Int16</a>","location":{"filename":"src/bytes_ext.cr","line_number":76,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L76"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Int16","visibility":"Public","body":"if bytes.size == (sizeof(Int16))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(Int16)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nInt16.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):Int16-class-method","name":"from_le_bytes","doc":"Create a `Int16` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0x34, 0x12]\nInt16.from_le_bytes(bytes)\n# => 0x1234i16\n```","summary":"<p>Create a <code><a href=\"Int16.html\">Int16</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Int16","args_html":"(bytes : Bytes) : <a href=\"Int16.html\">Int16</a>","location":{"filename":"src/bytes_ext.cr","line_number":76,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L76"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Int16","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"0x1234i16\".to_be_bytes\n# => Bytes[0x12, 0x34]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":76,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L76"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":76,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L76"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 0x1234i16.to_le_bytes\n# => Bytes[0x34, 0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":76,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L76"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]},{"html_id":"bytes_ext/Int32","path":"Int32.html","kind":"struct","full_name":"Int32","name":"Int32","abstract":false,"superclass":{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":82,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L82"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):Int32-class-method","name":"from_be_bytes","doc":"Create a `Int32` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x78, 0x56, 0x34, 0x12]\nInt32.from_be_bytes(bytes)\n# => 0x12345678i32\n```","summary":"<p>Create a <code><a href=\"Int32.html\">Int32</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Int32","args_html":"(bytes : Bytes) : <a href=\"Int32.html\">Int32</a>","location":{"filename":"src/bytes_ext.cr","line_number":82,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L82"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Int32","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Int32-class-method","name":"from_bytes","doc":"Create a `Int32` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"Int32.html\">Int32</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Int32","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"Int32.html\">Int32</a>","location":{"filename":"src/bytes_ext.cr","line_number":82,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L82"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Int32","visibility":"Public","body":"if bytes.size == (sizeof(Int32))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(Int32)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nInt32.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):Int32-class-method","name":"from_le_bytes","doc":"Create a `Int32` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0x12, 0x34, 0x56, 0x78]\nInt32.from_le_bytes(bytes)\n# => 0x12345678i32\n```","summary":"<p>Create a <code><a href=\"Int32.html\">Int32</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Int32","args_html":"(bytes : Bytes) : <a href=\"Int32.html\">Int32</a>","location":{"filename":"src/bytes_ext.cr","line_number":82,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L82"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Int32","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"0x12345678i32\".to_be_bytes\n# => Bytes[0x78, 0x56, 0x34, 0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":82,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L82"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":82,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L82"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 0x12345678i32.to_le_bytes\n# => Bytes[0x12, 0x34, 0x56, 0x78]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":82,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L82"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]},{"html_id":"bytes_ext/Int64","path":"Int64.html","kind":"struct","full_name":"Int64","name":"Int64","abstract":false,"superclass":{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":88,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L88"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):Int64-class-method","name":"from_be_bytes","doc":"Create a `Int64` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xD2]\nInt64.from_be_bytes(bytes)\n# => 1234_i64\n```","summary":"<p>Create a <code><a href=\"Int64.html\">Int64</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Int64","args_html":"(bytes : Bytes) : <a href=\"Int64.html\">Int64</a>","location":{"filename":"src/bytes_ext.cr","line_number":88,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L88"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Int64","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Int64-class-method","name":"from_bytes","doc":"Create a `Int64` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"Int64.html\">Int64</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Int64","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"Int64.html\">Int64</a>","location":{"filename":"src/bytes_ext.cr","line_number":88,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L88"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Int64","visibility":"Public","body":"if bytes.size == (sizeof(Int64))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(Int64)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nInt64.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):Int64-class-method","name":"from_le_bytes","doc":"Create a `Int64` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0xD2, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\nInt64.from_le_bytes(bytes)\n# => 1234_i64\n```","summary":"<p>Create a <code><a href=\"Int64.html\">Int64</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Int64","args_html":"(bytes : Bytes) : <a href=\"Int64.html\">Int64</a>","location":{"filename":"src/bytes_ext.cr","line_number":88,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L88"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Int64","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"1234_i64\".to_be_bytes\n# => Bytes[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xD2]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":88,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L88"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":88,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L88"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 1234_i64.to_le_bytes\n# => Bytes[0xD2, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":88,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L88"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]},{"html_id":"bytes_ext/Int8","path":"Int8.html","kind":"struct","full_name":"Int8","name":"Int8","abstract":false,"superclass":{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":70,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L70"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):Int8-class-method","name":"from_be_bytes","doc":"Create a `Int8` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x78]\nInt8.from_be_bytes(bytes)\n# => 0x12i8\n```","summary":"<p>Create a <code><a href=\"Int8.html\">Int8</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Int8","args_html":"(bytes : Bytes) : <a href=\"Int8.html\">Int8</a>","location":{"filename":"src/bytes_ext.cr","line_number":70,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L70"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Int8","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Int8-class-method","name":"from_bytes","doc":"Create a `Int8` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"Int8.html\">Int8</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Int8","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"Int8.html\">Int8</a>","location":{"filename":"src/bytes_ext.cr","line_number":70,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L70"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Int8","visibility":"Public","body":"if bytes.size == (sizeof(Int8))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(Int8)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nInt8.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):Int8-class-method","name":"from_le_bytes","doc":"Create a `Int8` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0x12]\nInt8.from_le_bytes(bytes)\n# => 0x12i8\n```","summary":"<p>Create a <code><a href=\"Int8.html\">Int8</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Int8","args_html":"(bytes : Bytes) : <a href=\"Int8.html\">Int8</a>","location":{"filename":"src/bytes_ext.cr","line_number":70,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L70"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Int8","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"0x12i8\".to_be_bytes\n# => Bytes[0x78]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":70,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L70"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":70,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L70"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 0x12i8.to_le_bytes\n# => Bytes[0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":70,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L70"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]},{"html_id":"bytes_ext/UInt128","path":"UInt128.html","kind":"struct","full_name":"UInt128","name":"UInt128","abstract":false,"superclass":{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":136,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L136"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):UInt128-class-method","name":"from_be_bytes","doc":"Create a `UInt128` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56, 0x78, 0x90, 0x12]\nUInt128.from_be_bytes(bytes)\n# => 0x12345678901234567890123456789012_u128\n```","summary":"<p>Create a <code><a href=\"UInt128.html\">UInt128</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : UInt128","args_html":"(bytes : Bytes) : <a href=\"UInt128.html\">UInt128</a>","location":{"filename":"src/bytes_ext.cr","line_number":136,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L136"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"UInt128","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):UInt128-class-method","name":"from_bytes","doc":"Create a `UInt128` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"UInt128.html\">UInt128</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : UInt128","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"UInt128.html\">UInt128</a>","location":{"filename":"src/bytes_ext.cr","line_number":136,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L136"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"UInt128","visibility":"Public","body":"if bytes.size == (sizeof(UInt128))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(UInt128)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nUInt128.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):UInt128-class-method","name":"from_le_bytes","doc":"Create a `UInt128` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0x12, 0x90, 0x78, 0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\nUInt128.from_le_bytes(bytes)\n# => 0x12345678901234567890123456789012_u128\n```","summary":"<p>Create a <code><a href=\"UInt128.html\">UInt128</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : UInt128","args_html":"(bytes : Bytes) : <a href=\"UInt128.html\">UInt128</a>","location":{"filename":"src/bytes_ext.cr","line_number":136,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L136"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"UInt128","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"0x12345678901234567890123456789012_u128\".to_be_bytes\n# => Bytes[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56, 0x78, 0x90, 0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":136,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L136"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":136,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L136"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 0x12345678901234567890123456789012_u128.to_le_bytes\n# => Bytes[0x12, 0x90, 0x78, 0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":136,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L136"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]},{"html_id":"bytes_ext/UInt16","path":"UInt16.html","kind":"struct","full_name":"UInt16","name":"UInt16","abstract":false,"superclass":{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":118,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L118"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):UInt16-class-method","name":"from_be_bytes","doc":"Create a `UInt16` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x12, 0x34]\nUInt16.from_be_bytes(bytes)\n# => 0x1234u16\n```","summary":"<p>Create a <code><a href=\"UInt16.html\">UInt16</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : UInt16","args_html":"(bytes : Bytes) : <a href=\"UInt16.html\">UInt16</a>","location":{"filename":"src/bytes_ext.cr","line_number":118,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L118"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"UInt16","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):UInt16-class-method","name":"from_bytes","doc":"Create a `UInt16` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"UInt16.html\">UInt16</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : UInt16","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"UInt16.html\">UInt16</a>","location":{"filename":"src/bytes_ext.cr","line_number":118,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L118"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"UInt16","visibility":"Public","body":"if bytes.size == (sizeof(UInt16))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(UInt16)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nUInt16.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):UInt16-class-method","name":"from_le_bytes","doc":"Create a `UInt16` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0x34, 0x12]\nUInt16.from_le_bytes(bytes)\n# => 0x1234u16\n```","summary":"<p>Create a <code><a href=\"UInt16.html\">UInt16</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : UInt16","args_html":"(bytes : Bytes) : <a href=\"UInt16.html\">UInt16</a>","location":{"filename":"src/bytes_ext.cr","line_number":118,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L118"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"UInt16","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"0x1234u16\".to_be_bytes\n# => Bytes[0x12, 0x34]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":118,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L118"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":118,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L118"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 0x1234u16.to_le_bytes\n# => Bytes[0x34, 0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":118,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L118"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]},{"html_id":"bytes_ext/UInt32","path":"UInt32.html","kind":"struct","full_name":"UInt32","name":"UInt32","abstract":false,"superclass":{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":124,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L124"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):UInt32-class-method","name":"from_be_bytes","doc":"Create a `UInt32` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x12, 0x34, 0x56, 0x78]\nUInt32.from_be_bytes(bytes)\n# => 12345678_u32\n```","summary":"<p>Create a <code><a href=\"UInt32.html\">UInt32</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : UInt32","args_html":"(bytes : Bytes) : <a href=\"UInt32.html\">UInt32</a>","location":{"filename":"src/bytes_ext.cr","line_number":124,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L124"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"UInt32","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):UInt32-class-method","name":"from_bytes","doc":"Create a `UInt32` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"UInt32.html\">UInt32</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : UInt32","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"UInt32.html\">UInt32</a>","location":{"filename":"src/bytes_ext.cr","line_number":124,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L124"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"UInt32","visibility":"Public","body":"if bytes.size == (sizeof(UInt32))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(UInt32)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nUInt32.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):UInt32-class-method","name":"from_le_bytes","doc":"Create a `UInt32` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0x78, 0x56, 0x34, 0x12]\nUInt32.from_le_bytes(bytes)\n# => 12345678_u32\n```","summary":"<p>Create a <code><a href=\"UInt32.html\">UInt32</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : UInt32","args_html":"(bytes : Bytes) : <a href=\"UInt32.html\">UInt32</a>","location":{"filename":"src/bytes_ext.cr","line_number":124,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L124"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"UInt32","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"12345678_u32\".to_be_bytes\n# => Bytes[0x12, 0x34, 0x56, 0x78]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":124,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L124"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":124,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L124"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 12345678_u32.to_le_bytes\n# => Bytes[0x78, 0x56, 0x34, 0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":124,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L124"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]},{"html_id":"bytes_ext/UInt64","path":"UInt64.html","kind":"struct","full_name":"UInt64","name":"UInt64","abstract":false,"superclass":{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":130,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L130"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):UInt64-class-method","name":"from_be_bytes","doc":"Create a `UInt64` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\nUInt64.from_be_bytes(bytes)\n# => 1234567890123456_u64\n```","summary":"<p>Create a <code><a href=\"UInt64.html\">UInt64</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : UInt64","args_html":"(bytes : Bytes) : <a href=\"UInt64.html\">UInt64</a>","location":{"filename":"src/bytes_ext.cr","line_number":130,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L130"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"UInt64","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):UInt64-class-method","name":"from_bytes","doc":"Create a `UInt64` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"UInt64.html\">UInt64</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : UInt64","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"UInt64.html\">UInt64</a>","location":{"filename":"src/bytes_ext.cr","line_number":130,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L130"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"UInt64","visibility":"Public","body":"if bytes.size == (sizeof(UInt64))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(UInt64)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nUInt64.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):UInt64-class-method","name":"from_le_bytes","doc":"Create a `UInt64` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\nUInt64.from_le_bytes(bytes)\n# => 1234567890123456_u64\n```","summary":"<p>Create a <code><a href=\"UInt64.html\">UInt64</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : UInt64","args_html":"(bytes : Bytes) : <a href=\"UInt64.html\">UInt64</a>","location":{"filename":"src/bytes_ext.cr","line_number":130,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L130"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"UInt64","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"1234567890123456_u64\".to_be_bytes\n# => Bytes[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":130,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L130"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":130,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L130"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 1234567890123456_u64.to_le_bytes\n# => Bytes[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":130,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L130"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]},{"html_id":"bytes_ext/UInt8","path":"UInt8.html","kind":"struct","full_name":"UInt8","name":"UInt8","abstract":false,"superclass":{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"bytes_ext/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"bytes_ext/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"bytes_ext/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"bytes_ext/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"bytes_ext/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"bytes_ext/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bytes_ext.cr","line_number":112,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L112"}],"repository_name":"bytes_ext","program":false,"enum":false,"alias":false,"const":false,"constructors":[{"html_id":"from_be_bytes(bytes:Bytes):UInt8-class-method","name":"from_be_bytes","doc":"Create a `UInt8` value from its representation as a byte array in big endian.\n\n```\nbytes = Bytes[0x12]\nUInt8.from_be_bytes(bytes)\n# => 0x12u8\n```","summary":"<p>Create a <code><a href=\"UInt8.html\">UInt8</a></code> value from its representation as a byte array in big endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : UInt8","args_html":"(bytes : Bytes) : <a href=\"UInt8.html\">UInt8</a>","location":{"filename":"src/bytes_ext.cr","line_number":112,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L112"},"def":{"name":"from_be_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"UInt8","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"from_bytes(bytes:Bytes,format:IO::ByteFormat=IO::ByteFormat::SystemEndian):UInt8-class-method","name":"from_bytes","doc":"Create a `UInt8` value from its representation as a byte array.","summary":"<p>Create a <code><a href=\"UInt8.html\">UInt8</a></code> value from its representation as a byte array.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(bytes : Bytes, format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : UInt8","args_html":"(bytes : Bytes, format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : <a href=\"UInt8.html\">UInt8</a>","location":{"filename":"src/bytes_ext.cr","line_number":112,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L112"},"def":{"name":"from_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"},{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"UInt8","visibility":"Public","body":"if bytes.size == (sizeof(UInt8))\nelse\n  raise(ArgumentError.new(\"Expected exactly #{sizeof(UInt8)} bytes\"))\nend\n\nmemory_io = IO::Memory.new(bytes)\nUInt8.from_io(memory_io, format)\n"},"external_var":false},{"html_id":"from_le_bytes(bytes:Bytes):UInt8-class-method","name":"from_le_bytes","doc":"Create a `UInt8` value from its representation as a byte array in little endian.\n\n```\nbytes = Bytes[0x12]\nUInt8.from_le_bytes(bytes)\n# => 0x12u8\n```","summary":"<p>Create a <code><a href=\"UInt8.html\">UInt8</a></code> value from its representation as a byte array in little endian.</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : UInt8","args_html":"(bytes : Bytes) : <a href=\"UInt8.html\">UInt8</a>","location":{"filename":"src/bytes_ext.cr","line_number":112,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L112"},"def":{"name":"from_le_bytes","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"UInt8","visibility":"Public","body":"self.from_bytes(bytes, IO::ByteFormat::LittleEndian)"},"external_var":false}],"instance_methods":[{"html_id":"to_be_bytes:Bytes-instance-method","name":"to_be_bytes","doc":"Return the memory representation of this number as a byte array in big-endian (network) byte order.\n\n```\nbytes = \"0x12u8\".to_be_bytes\n# => Bytes[0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in big-endian (network) byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":112,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L112"},"def":{"name":"to_be_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::BigEndian)"},"external_var":false},{"html_id":"to_bytes(format:IO::ByteFormat=IO::ByteFormat::SystemEndian):Bytes-instance-method","name":"to_bytes","doc":"Return the memory representation of this number as a byte array using the specified *format*","summary":"<p>Return the memory representation of this number as a byte array using the specified <em>format</em></p>","abstract":false,"args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"args_string":"(format : IO::ByteFormat = IO::ByteFormat::SystemEndian) : Bytes","args_html":"(format : IO::ByteFormat = <span class=\"t\">IO</span><span class=\"t\">::</span><span class=\"t\">ByteFormat</span><span class=\"t\">::</span><span class=\"t\">SystemEndian</span>) : Bytes","location":{"filename":"src/bytes_ext.cr","line_number":112,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L112"},"def":{"name":"to_bytes","args":[{"name":"format","default_value":"IO::ByteFormat::SystemEndian","external_name":"format","restriction":"IO::ByteFormat"}],"return_type":"Bytes","visibility":"Public","body":"io = IO::Memory.new\nio.write_bytes(self, format)\nio.rewind\nio.getb_to_end\n"},"external_var":false},{"html_id":"to_le_bytes:Bytes-instance-method","name":"to_le_bytes","doc":"Return the memory representation of this number as a byte array in little-endian byte order.\n\n```\nbytes = 0x12u8.to_le_bytes\n# => Bytes[0x12]\n```","summary":"<p>Return the memory representation of this number as a byte array in little-endian byte order.</p>","abstract":false,"location":{"filename":"src/bytes_ext.cr","line_number":112,"url":"https://github.com/mamantoha/bytes_ext/blob/17db7147e405a91cd4bdf487584621cc1bb52d44/src/bytes_ext.cr#L112"},"def":{"name":"to_le_bytes","return_type":"Bytes","visibility":"Public","body":"to_bytes(IO::ByteFormat::LittleEndian)"},"external_var":false}]}]}})